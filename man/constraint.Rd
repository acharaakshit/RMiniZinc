% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constraint.R
\name{constraint}
\alias{constraint}
\title{constraint Class}
\description{
Constraint is a class to describe Minizinc constraints on variables.
It contains information that is needed to define a Minizinc constraint, such as
type of constraint (==, !=, >, <, >=, <=) and variables involved in a given constraint.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{operator}}{Constraints specify the Boolean expressions that the decision variables
must satisfy to be a valid solution to the model.
For now, only relational operators are supported:
==, !=, <, >, <=, >=.

Taken from Minizinc documentation.}

\item{\code{variables}}{A list of objects of
\code{\link{variable}} class.}

\item{\code{expr}}{expression for the constraint}

\item{\code{name}}{Constraint character name for internal use within Minizinc model.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{name}}{Constraint character name for internal use within Minizinc model.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{constraint$new()}}
\item \href{#method-get_name}{\code{constraint$get_name()}}
\item \href{#method-clone}{\code{constraint$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of Constraint class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{constraint$new(operator, variables)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{operator}}{a constraint of model}

\item{\code{variables}}{the variables involved in the constraint}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_name"></a>}}
\if{latex}{\out{\hypertarget{method-get_name}{}}}
\subsection{Method \code{get_name()}}{
Returns constraint name that is used in Minizinc
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{constraint$get_name()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{constraint$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
