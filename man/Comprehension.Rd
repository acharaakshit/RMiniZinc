% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Expression.R
\name{Comprehension}
\alias{Comprehension}
\title{Comprehension}
\description{
create a Comprehension in MiniZinc
}
\section{Super class}{
\code{\link[rminizinc:Expression]{rminizinc::Expression}} -> \code{Comprehension}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{.generators}}{a vector of generators}

\item{\code{.expression}}{the comprehension expression}

\item{\code{.set}}{TRUE if comprehension is a set}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{.generators}}{a vector of generators}

\item{\code{.expression}}{the comprehension expression}

\item{\code{.set}}{TRUE if comprehension is a set}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Comprehension$new()}}
\item \href{#method-ngens}{\code{Comprehension$ngens()}}
\item \href{#method-getGen_i}{\code{Comprehension$getGen_i()}}
\item \href{#method-setGen_i}{\code{Comprehension$setGen_i()}}
\item \href{#method-In}{\code{Comprehension$In()}}
\item \href{#method-where}{\code{Comprehension$where()}}
\item \href{#method-decl}{\code{Comprehension$decl()}}
\item \href{#method-getBody}{\code{Comprehension$getBody()}}
\item \href{#method-setBody}{\code{Comprehension$setBody()}}
\item \href{#method-isSet}{\code{Comprehension$isSet()}}
\item \href{#method-c_str}{\code{Comprehension$c_str()}}
\item \href{#method-clone}{\code{Comprehension$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
constructor
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Comprehension$new(generators, body, set)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{generators}}{generators of the expression}

\item{\code{body}}{body/expression of the comprehension}

\item{\code{set}}{bool to specify if comprehension is a set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ngens"></a>}}
\if{latex}{\out{\hypertarget{method-ngens}{}}}
\subsection{Method \code{ngens()}}{
get the number of generators
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Comprehension$ngens()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getGen_i"></a>}}
\if{latex}{\out{\hypertarget{method-getGen_i}{}}}
\subsection{Method \code{getGen_i()}}{
get the ith generator expression
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Comprehension$getGen_i(i)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{i}}{index}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setGen_i"></a>}}
\if{latex}{\out{\hypertarget{method-setGen_i}{}}}
\subsection{Method \code{setGen_i()}}{
set the ith generator expression
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Comprehension$setGen_i(i, expGen)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{i}}{index}

\item{\code{expGen}}{generator expression to be set}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-In"></a>}}
\if{latex}{\out{\hypertarget{method-In}{}}}
\subsection{Method \code{In()}}{
get the in expression of ith generator
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Comprehension$In(i)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{i}}{index}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-where"></a>}}
\if{latex}{\out{\hypertarget{method-where}{}}}
\subsection{Method \code{where()}}{
get the where expression of ith generator
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Comprehension$where(i)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{i}}{index}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-decl"></a>}}
\if{latex}{\out{\hypertarget{method-decl}{}}}
\subsection{Method \code{decl()}}{
get the idecl declaration of igen generator
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Comprehension$decl(igen, idecl)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{igen}}{generator index}

\item{\code{idecl}}{declaration index}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getBody"></a>}}
\if{latex}{\out{\hypertarget{method-getBody}{}}}
\subsection{Method \code{getBody()}}{
get the expression/body
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Comprehension$getBody()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setBody"></a>}}
\if{latex}{\out{\hypertarget{method-setBody}{}}}
\subsection{Method \code{setBody()}}{
set the expression/body
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Comprehension$setBody(e)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{e}}{new expression value}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-isSet"></a>}}
\if{latex}{\out{\hypertarget{method-isSet}{}}}
\subsection{Method \code{isSet()}}{
check if comprehension is a set
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Comprehension$isSet()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-c_str"></a>}}
\if{latex}{\out{\hypertarget{method-c_str}{}}}
\subsection{Method \code{c_str()}}{
get the MiniZinc representation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Comprehension$c_str()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Comprehension$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
