% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ConstraintItem.R
\name{ConstraintItem}
\alias{ConstraintItem}
\title{Constraint Items}
\description{
Describe Minizinc constraints on decision variables.
}
\section{Super class}{
\code{\link[rminizinc:Item]{rminizinc::Item}} -> \code{ConstraintItem}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{.e}}{the constraint expression}

\item{\code{.delete_flag}}{used to delete items}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{.e}}{the constraint expression}

\item{\code{.delete_flag}}{used to delete items}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ConstraintItem$new()}}
\item \href{#method-getExp}{\code{ConstraintItem$getExp()}}
\item \href{#method-setExp}{\code{ConstraintItem$setExp()}}
\item \href{#method-c_str}{\code{ConstraintItem$c_str()}}
\item \href{#method-getDeleteFlag}{\code{ConstraintItem$getDeleteFlag()}}
\item \href{#method-delete}{\code{ConstraintItem$delete()}}
\item \href{#method-clone}{\code{ConstraintItem$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of Constraint class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConstraintItem$new(e = NULL, mzn_str = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{e}}{The expression for the constraint (used if e is NULL)}

\item{\code{mzn_str}}{string representation of Constraint item}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getExp"></a>}}
\if{latex}{\out{\hypertarget{method-getExp}{}}}
\subsection{Method \code{getExp()}}{
get the constraint expression
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConstraintItem$getExp()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setExp"></a>}}
\if{latex}{\out{\hypertarget{method-setExp}{}}}
\subsection{Method \code{setExp()}}{
set the constraint expression
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConstraintItem$setExp(e)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{e}}{expression}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-c_str"></a>}}
\if{latex}{\out{\hypertarget{method-c_str}{}}}
\subsection{Method \code{c_str()}}{
serialize to MiniZinc syntax
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConstraintItem$c_str()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getDeleteFlag"></a>}}
\if{latex}{\out{\hypertarget{method-getDeleteFlag}{}}}
\subsection{Method \code{getDeleteFlag()}}{
delete flag for internal use
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConstraintItem$getDeleteFlag()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-delete"></a>}}
\if{latex}{\out{\hypertarget{method-delete}{}}}
\subsection{Method \code{delete()}}{
delete the constraint item
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConstraintItem$delete()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConstraintItem$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
