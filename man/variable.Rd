% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/variable.R
\name{variable}
\alias{variable}
\title{Declare a new parameter or a new variable.}
\description{
An object containing all the properties of a variable.
}
\examples{
# an integer parameter varaible 
par_int <- variable$new(kind = "parameter", type = "int", value = 10)
# a floating point decision variable 
var_float <- variable$new(kind = "decision", type = "float" )
# enum value can only be an atmoic vector of characters
par_enum <- variable$new(kind = "parameter", type = "enum", value = c("RED","YELLOW","GREEN"))   
# set value can either be an atomic vector of integers or floats 
par_setA <- variable$new(kind = "parameter", type = "set", sub_type = "float", value = c(1,3,4.5,6))
# or they can be given integer, floating point or enum ranges using c(l=lower_bound, u = upper_bound)
par_setB <- variable$new(kind = "parameter", type = "set", sub_type = "int", value = c(l=1,u=10))
# arrays can only be provided "array" type values in R. They can be declared without indices 
par_arrrayA <- variable$new(kind = "parameter", type = "array", sub_type = "int", 
                            value = array(1:50, c(10,10,10,10,10)))
# or with given indices that can be sets, enums or integer ranges (can only be a list)
par_arrayB <- variable$new(kind = "parameter", type = "array", sub_type = "int", 
                           value = array(1:10), array_index = list(c(l=1,u=10),c(l=1,u=10)
                           ,c(l=1,u=10),c(l=1,u=10),c(l=1,u=10)) )
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{kind}}{specify whether it is a parameter or decision variable}

\item{\code{name}}{name of the parameter or decision variable}

\item{\code{domain}}{the domain of decision variable}

\item{\code{type}}{data type of the parameter}

\item{\code{value}}{value of the parameter}

\item{\code{expr}}{the expression for a decision or parameter}

\item{\code{sub_type}}{the data type of elements of a collection type}

\item{\code{array_index}}{the index values if the variable is of type array}

\item{\code{name}}{variable character name for internal use within Minizinc model.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{variable$new()}}
\item \href{#method-get_name}{\code{variable$get_name()}}
\item \href{#method-set_name}{\code{variable$set_name()}}
\item \href{#method-clone}{\code{variable$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
initialize the variable class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{variable$new(
  kind,
  name = NULL,
  type,
  value = NULL,
  domain = NULL,
  expr = NULL,
  sub_type = NULL,
  array_index = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{kind}}{parameter or decision variable}

\item{\code{name}}{name of the parameter or decision variable}

\item{\code{type}}{data type of parameter or decision variable}

\item{\code{value}}{value of the parameter or decision variable}

\item{\code{domain}}{domain of decision variable}

\item{\code{expr}}{expression value for the decision variable}

\item{\code{sub_type}}{the data type of element of collections}

\item{\code{array_index}}{the index if variable is an array (can only be a list)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_name"></a>}}
\if{latex}{\out{\hypertarget{method-get_name}{}}}
\subsection{Method \code{get_name()}}{
Returns variable name that is used in Minizinc model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{variable$get_name()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_name"></a>}}
\if{latex}{\out{\hypertarget{method-set_name}{}}}
\subsection{Method \code{set_name()}}{
Set variable name
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{variable$set_name(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{the name to be set}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{variable$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
