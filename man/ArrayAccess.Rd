% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Expression.R
\name{ArrayAccess}
\alias{ArrayAccess}
\title{Array Access}
\description{
create ArrayAccess elements in MiniZinc
}
\examples{
vDecl1 = IntSetDecl(name = "SET", kind = "par")
vDecl2 = IntArrDecl(name = "profit", kind = "par", ndim = 1, 
ind = list(vDecl1$id()))
newArrayAccess = ArrayAccess$new(v = vDecl2$id(),
 args = list(IntDecl(name = "i", kind = "par")))
}
\section{Super class}{
\code{\link[rminizinc:Expression]{rminizinc::Expression}} -> \code{ArrayAccess}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{.v}}{the id/value of array}

\item{\code{.index}}{indices of the array}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{.v}}{the id/value of array}

\item{\code{.index}}{indices of the array}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ArrayAccess$new()}}
\item \href{#method-v}{\code{ArrayAccess$v()}}
\item \href{#method-getIndex}{\code{ArrayAccess$getIndex()}}
\item \href{#method-setIndex}{\code{ArrayAccess$setIndex()}}
\item \href{#method-c_str}{\code{ArrayAccess$c_str()}}
\item \href{#method-clone}{\code{ArrayAccess$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
constructor
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ArrayAccess$new(v, args)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{v}}{the value of element}

\item{\code{args}}{the array indices}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-v"></a>}}
\if{latex}{\out{\hypertarget{method-v}{}}}
\subsection{Method \code{v()}}{
return the array access value
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ArrayAccess$v()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getIndex"></a>}}
\if{latex}{\out{\hypertarget{method-getIndex}{}}}
\subsection{Method \code{getIndex()}}{
get the index i
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ArrayAccess$getIndex(i)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{i}}{index of argument}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setIndex"></a>}}
\if{latex}{\out{\hypertarget{method-setIndex}{}}}
\subsection{Method \code{setIndex()}}{
set the index i
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ArrayAccess$setIndex(i, val)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{i}}{index of argument}

\item{\code{val}}{expression for new index}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-c_str"></a>}}
\if{latex}{\out{\hypertarget{method-c_str}{}}}
\subsection{Method \code{c_str()}}{
return the MiniZinc representation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ArrayAccess$c_str()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ArrayAccess$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
